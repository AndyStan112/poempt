/* eslint-disable jsx-a11y/alt-text */

import { Button, Select } from "flowbite-react";
import { Icon } from "@iconify/react";
import { ReactNode, useState } from "react";

/* eslint-disable @next/next/no-img-element */
function PoemCard(props: {
  title: string;
  image: string;
  text: string;
  userName?: string;
  userImage?: string;
  showOptions?: boolean;
}) {
  const ttsVoices = speechSynthesis.getVoices();
  const [selectedVoice, setSelectedVoice] = useState(0);
  const [isSpeaking, setIsSpeaking] = useState(false);

  function speak() {
    if (isSpeaking) {
      speechSynthesis.cancel();
    } else {
      const utt = new SpeechSynthesisUtterance(props.text);
      utt.voice = ttsVoices[selectedVoice];
      speechSynthesis.speak(utt);
    }
    setIsSpeaking(speechSynthesis.speaking);
  }

  return (
    <>
      <div className="flex h-full p-4 mb-4 flex-col gap-3 md:flex-row rounded-xl border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 mx-auto sm:w-full md:w-2/3 lg:w-1/2">
        <div className="flex-2 text-center md:text-left">
          <h5 className="text-2xl font-bold tracking-tight text-gray-900 mb-3">
            {props.title}
          </h5>
          <p className="font-normal text-gray-700 whitespace-pre-wrap">
            {props.text}
          </p>
        </div>
        <div className="flex flex-1 flex-col justify-center md:justify-start items-center md:items-end text-gray-300 text-sm">
          <div className="flex-1">
            <img
              src={props.image}
              alt={props.title}
              className="rounded-md shadow-md"
            />
          </div>
          {props.userName && (
            <p className="flex flex-row">
              <div className="text-right">
                <div className="text-sm text-gray-300">Generated by</div>
                <div className="text-md text-gray-400">User Name</div>
              </div>
              <img
                className="w-10 h-10 rounded-full border-gray-100 border-2"
                src={props.userImage ? props.userImage : "generic_user.png"}
              />
            </p>
          )}
          <p>
            Made with <span className="text-lg text-gray-400">PoemPT</span>
          </p>
        </div>
      </div>
      {props.showOptions && (
        <div className="flex h-full p-2 mb-4 flex-row gap-2 rounded-xl border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 mx-auto w-fit">
          <Select
            value={selectedVoice}
            disabled={isSpeaking}
            onChange={(e) => setSelectedVoice(Number(e.target.value))}
          >
            {ttsVoices
              ? ttsVoices.map((voice, index) => (
                  <option key={index} value={index}>
                    {voice.name}
                  </option>
                ))
              : ""}
          </Select>
          <Button size="sm" color="light" onClick={speak}>
            {isSpeaking ? (
              <Icon icon="fluent:stop-20-regular" fontSize="22px" />
            ) : (
              <Icon icon="fluent:immersive-reader-20-regular" fontSize="22px" />
            )}
          </Button>
          <Button size="sm" color="success">
            <Icon icon="fluent:bookmark-add-20-regular" fontSize="22px" />
          </Button>
        </div>
      )}
    </>
  );
}

export default PoemCard;
